{"version":3,"sources":["images/blackMoon.jpg","images/moonDarkness.jpg","components/header/header.component.jsx","components/main/main.component.jsx","components/footer/footer.components.jsx","pages/homepage/homepage.component.jsx","components/navbar/navbar.component.jsx","components/search/search.component.jsx","components/button/button.component.jsx","pages/gallery/gallery.component.jsx","App.js","serviceWorker.js","index.js"],"names":["module","exports","Header","props","style","backgroundImage","imageUrl","to","className","Main","src","imageUrlOne","alt","imageUrlTwo","Footer","href","target","HomePage","blackMoon","moonDarkness","React","Component","NavBar","Search","type","value","this","onChange","Button","onClick","Gallery","nasaGallery","fetch","state","then","response","json","jsonResponse","setState","photo","collection","items","map","image","number","key","links","handleChange","event","handleClick","App","exact","path","component","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.3bd8c79b.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/blackMoon.59273dea.jpg\";","module.exports = __webpack_public_path__ + \"static/media/moonDarkness.2f9a27ca.jpg\";","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport './header.styles.scss';\r\n\r\nconst Header = (props) => (\r\n    <header\r\n        style={{\r\n            backgroundImage: `url(${props.imageUrl})`\r\n        }}\r\n    >\r\n        <nav>\r\n            <ul>\r\n                <li><Link to=\"/\">Home</Link></li>\r\n                <li><Link to=\"/gallery\">Gallery</Link></li>\r\n            </ul>\r\n        </nav>\r\n        <section className=\"header-container\">\r\n            <h1 className=\"header-container-title\">NASA Gallery</h1>\r\n        </section>\r\n    </header>\r\n)\r\n\r\nexport default Header;","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport './main.styles.scss';\r\n\r\nconst Main = (props) => (\r\n    <main>\r\n        <section className=\"main-container\">\r\n            <h2 className>Discover the space</h2>\r\n            <div className=\"main-container-media\">\r\n                <h2>Space photos</h2>\r\n                <Link to=\"/gallery\"><img src={props.imageUrlOne} alt=\"moon\" /></Link>\r\n            </div>\r\n            <div className=\"main-container-media\">\r\n                <h2>Space media</h2>\r\n                <Link to=\"/gallery\"><img src={props.imageUrlTwo} alt=\"logo\" /></Link>\r\n            </div>\r\n        </section>\r\n    </main>\r\n)\r\n\r\nexport default Main;","import React from 'react';\r\n\r\nimport './footer.styles.scss';\r\n\r\nconst Footer = () => (\r\n    <footer>\r\n        <p>Made with <span>&hearts;</span> in London by <a href=\"https://www.devmarco.com/\" target=\"_blank\" >Marco Valeri</a> - &copy; 2020 - All rights reserved</p>\r\n    </footer>\r\n)\r\n\r\nexport default Footer;","import React from 'react';\r\n\r\nimport Header from '../../components/header/header.component';\r\nimport Main from '../../components/main/main.component';\r\nimport Footer from '../../components/footer/footer.components';\r\n\r\n// Import images\r\nimport blackMoon from '../../images/blackMoon.jpg';\r\nimport moonDarkness from '../../images/moonDarkness.jpg';\r\n\r\nclass HomePage extends React.Component {\r\n    \r\n    render() {\r\n        return (\r\n            <div>\r\n                <Header imageUrl={blackMoon} />\r\n                <Main imageUrlOne={moonDarkness} imageUrlTwo={blackMoon} />\r\n                <Footer />\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default HomePage;","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport './navbar.styles.scss';\r\n\r\nconst NavBar = () => (\r\n    <nav>\r\n        <ul>\r\n            <li><Link to=\"/\">Home</Link></li>\r\n            <li><Link to=\"/gallery\">Gallery</Link></li>\r\n        </ul>\r\n    </nav>\r\n)\r\n\r\nexport default NavBar;","import React from 'react';\r\n\r\nimport './search.styles.scss';\r\n\r\nclass Search extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <input type=\"text\" value={this.props.value} onChange={this.props.onChange} />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Search;","import React from 'react';\r\n\r\nimport './button.styles.scss';\r\n\r\nclass Button extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <input type=\"submit\" value=\"Search\" onClick={this.props.onClick} />\r\n        )\r\n    }\r\n}\r\n\r\nexport default Button;","import React from 'react';\r\n\r\nimport NavBar from '../../components/navbar/navbar.component';\r\nimport Search from '../../components/search/search.component';\r\nimport Button from '../../components/button/button.component';\r\nimport Footer from '../../components/footer/footer.components';\r\n\r\nimport './gallery.styles.scss';\r\n\r\nclass Gallery extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            value: '',\r\n            photo: []\r\n        };\r\n    }\r\n\r\n    nasaGallery = () => {\r\n        fetch(`https://images-api.nasa.gov/search?q=${this.state.value}&media_type=image`)\r\n        .then(response => response.json())\r\n        .then(jsonResponse => {\r\n\r\n            this.setState({photo: jsonResponse.collection.items.map((image, number) => {\r\n                return (\r\n                    <div key={number} className=\"gallery-picture\">\r\n                        <img src={image.links[0].href} alt=\"\" />\r\n                    </div>\r\n                )\r\n            })})\r\n        });\r\n    }\r\n\r\n    handleChange = (event) => {\r\n        this.setState({value: event.target.value});\r\n    }\r\n\r\n    handleClick = () => {\r\n        this.nasaGallery();\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <NavBar />\r\n                <section className=\"gallery-container\">\r\n                    <div className=\"gallery-title\">\r\n                        <h2>Discover the most beautiful NASA's pictures</h2>\r\n                    </div>\r\n                    <div className=\"gallery-search\">\r\n                        <Search value={this.state.value} onChange={this.handleChange} />\r\n                        <Button onClick={this.handleClick} />\r\n                    </div>\r\n                    {this.state.photo}\r\n                </section>\r\n                <Footer />\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default Gallery;","import React from 'react';\nimport { Switch, Route } from 'react-router-dom';\n\nimport HomePage from './pages/homepage/homepage.component';\nimport Gallery from './pages/gallery/gallery.component';\nimport Main from './components/main/main.component';\n\nimport './App.css';\n\nclass App extends React.Component {\n  \n  render() {\n    return (\n      <Switch>\n        <Route exact path=\"/\" component={HomePage} />\n        <Route path=\"/gallery\" component={Gallery} />\n      </Switch>\n    )\n  }\n\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { HashRouter as Router } from 'react-router-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <Router>\n    <App />\n  </Router>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();"],"sourceRoot":""}